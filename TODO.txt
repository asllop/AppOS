
 * Networking with support for drivers.
    - Port an IP stack:
      uIP (https://github.com/adamdunkels/uip)
      lwIP (http://savannah.nongnu.org/projects/lwip/)

 * File System

 * Interrupt system:
CORE/TASK:

TASK core_resident(void (*task)(void *, size_t), PRIORITY priority, size_t stackSize)

Crea una tasca nova amb estat TASK_STATE_RESIDENT. A diferencia de les tasques normals, aquesta funció te dos arguments: void *buffer, size_t size

int core_wakeup(TASK taskID, void *buff, size_t size)

Envia un event a la tasca resident. Aixo fa que la taska resident s'executi amb els dos arguments passats.
Si tot va bé, retorna 0.
Si la tasca ja es troba ocupada atenent un altre event, retorna TASK_BUSSY.
Si la tasca no es de tipus resident, retorna TASK_NO_RESIDENT.

 * PCI interface (required for USB suport in PC32 arch)

 * USB: host controller driver and libUSB-like interface for API (or port libUSB).

 * Port AppOS to Arduino. Specially UNO & Leonardo (ATmega328P, ATmega32u4)

 * Port AppOS to RaspberryPI

 * Port AppOS to MSP430

 * Port AppOS to Microchip PIC 8 & 16 bits

 * Implement SMP for RasPI and PC.

 * Console (screen + keyboard) driver for term.

 * Interface for other serial ports (SPI, I2C). Maybe generalize "serial_" module.
