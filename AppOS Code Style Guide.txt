AppOS Code Style Guide v1.0
===========================

0. Preamble
-----------

The following rules only apply to AppOS kernel code itself, not to user applications.
If something is not covered by a rule, use the Linux kernel coding style as a reference.
In general terms the code should be clear, well commented and easy to understand.

1. Variable Names
-----------------

Names in camel case starting with lowercase. In pointers, at least one space between askterisk and variable name.
Examples:

int segmentNumber;
char * charBuffer;
float normalizedChangeRates[10];
char * buf;
struct BlockStruct * block;

2. Function Names
-----------------

Names in snake case, all letters in lowercase. Examples:

void do_something();
int this_is_a_function();

Fist word must be the module name. Examples:

// Module Core
core_sleep
core_avail

// Module Serial
serial_wait
serial_timeout

3. Blocks
---------

Open brace always in the line below block definition.
In functions, no separation between function name and parentheses.
In flow control structures, one space between name and parentheses.
Examples:

void foo()
{
	another_function();

	if (condition)
	{
		while (condition)
		{
			for (int i = 0 ; i < cnt ; i ++)
			{
				switch (index)
				{
					case 0:
						...
						break;

					case 1:
						...
						break;

					default:
						...
				}
			}
		}
	}
}

Blocks with one line content can be defined in one line without braces. Examples:

while (condition) do_something();

if (condition) do_something();
else do_something_else();

The prefered way to define a infinite loop is the "for" statement. Examples:

for (;;)
{
	// Do something forever...
}

// Do nothing forever
for (;;);

4. Conditions
-------------

No space between parentheses and condition.
One space between comparation / logic operators and the operands.
Multiple conditions with logic operators may be in different lines, depending on the length.
In a "for", space between semicolon and statement.
Examples:

if (a < 10) ...

for (int i = 0 ; i < cnt ; i ++) ...

if (a == 0 && b == 0) ...

if (structPointer->element0 == 0 ||
    structPointer->element1 == 0 ||
    structPointer->element2 == 0)
{
    ...
}

5. Defined Types and Struct Names
---------------------------------

Camel case starting with capital letters. Examples:

typedef unsigned char Port;
struct BlockStruct { ... };

This only applies to AppOS specific types, not generic ones like "bool", "byte" or "time_t".

6. Typedef Enums
----------------

Snake case in capital letters, using name as a prefix for values. Examples:

typedef enum
{
    MEM_TYPE_TOTAL = 0,
    MEM_TYPE_USED

} MEM_TYPE;

typedef enum
{
    NET_IFACE_TYPE_ETH,
    NET_IFACE_TYPE_WIFI,
    NET_IFACE_TYPE_SLIP,
    NET_IFACE_TYPE_PPP,
    NET_IFACE_TYPE_BT
    
} NET_IFACE_TYPE;

7. Macros
---------

Snake case in capital letters. Examples:

#define DEFAULT_STACK_SIZE 1024
#define	TASK_H

In general, the macros used for configuration or tunning some OS behaviour, must we enclosed into an #if,
to allow definition from command line or external header file. Example:

#ifndef MAX_NUM_TASKS
#define MAX_NUM_TASKS 100
#endif
